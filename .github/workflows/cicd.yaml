name: Terraform CI

on:
  push:
    branches:
      - main
  pull_request: 
    branches: 
        - main

jobs:
    tf-fmt-checkov:
      runs-on: ubuntu-latest
      steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v3

          - name: Terraform Format
            run: terraform fmt -check -diff

          - name: Terraform Linter
            uses: terraform-linters/setup-tflint@v1

          - name: Run checkov
            uses: bridgecrewio/checkov-action@master
            with:
              soft_fail: true

    tf-init-plan-apply:
      needs: [tf-fmt-checkov]
      runs-on: ubuntu-latest
      steps:
          - name: Checkout
            uses: actions/checkout@v4

          - name: Setup Terraform
            uses: hashicorp/setup-terraform@v3

          - name: Run init
            run: terraform init
            env:
              ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
              ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
              ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
              ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
              TF_VAR_vm_admin_password: ${{ secrets.TF_VAR_VM_ADMIN_PASSWORD }}

          - name: create plan
            run: terraform plan
            env:
                  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
                  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
                  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
                  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
                  TF_VAR_vm_admin_password: ${{ secrets.TF_VAR_VM_ADMIN_PASSWORD }}

          - name: Terraform apply
            if: github.ref == 'refs/heads/main'
            run: terraform apply -auto-approve
            env:
              ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
              ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
              ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
              ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
              TF_VAR_vm_admin_password: ${{ secrets.TF_VAR_VM_ADMIN_PASSWORD }}

          - name: Run Ansible playbook
            run: |
              chmod 400 private_key.pem
              ansible --version
              ansible-galaxy collection list
              ansible-playbook playbook.yml -i inventory.ini --private-key private_key.pem
            working-directory: ./ansible
